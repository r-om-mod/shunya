def init2[A](l: List[A]): List[A] = {
  def loop(li: List[A], newList: List[A]): List[A] = {
    li match {
      case Nil => Nil
      case Cons(h, Nil) => newList
      case Cons(h, t) => loop(t, Cons(h, newList))
    }
  }
  loop(l, Nil)
}

// the above, while removing the last element as intended, reverses the original list

---

// below works as expected for Chapter 3 exercise 6
def init[A](l: List[A]): List[A] = {
  def loop(li: List[A], newList: List[A]): List[A] = {
    li match {
      case Nil => Nil
      case Cons(h, Nil) => newList
      //case Cons(h, t) => loop(t, Cons(h, newList))
      case Cons(h, t) => Cons(h, loop(t, newList))
    }
  }
  loop(l, Nil)
}


init(List(1,2,3,4,5))

init(List(1))
